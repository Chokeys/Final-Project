<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.ClassManageMapper">

    <!-- 1. 클래스 등록 -->
    <insert id="insertClassOne" parameterType="ClassProduct">
        INSERT INTO classproduct( title, postcode, address1, address2, address3, price, instructor, intro, curriculum, 
        localcode, actdetailcode, nickname, memberid, latitude, longitude )
        VALUES ( #{title}, #{postcode}, #{address1}, #{address2}, #{address3}, #{price}, #{instructor}, #{intro}, #{curriculum}, 
        #{localcode}, #{actdetailcode}, #{nickname}, #{memberid}, #{latitude}, #{longitude} )
    </insert>

    <!-- 2. 지역 상위 분류 조회 -->
    <select id="selectCityCateList" resultType="CityCate">
        SELECT c.* FROM citycate c ORDER BY c.code ASC
    </select>

    <!-- 3. 지역 하위 분류 조회(by 상위 분류 코드) -->
    <select id="selectLocalCateList" parameterType="int" resultType="LocalCate">
        SELECT l.* FROM localcate l WHERE citycode = #{citycode} ORDER BY l.code ASC
    </select>

    <!-- 4. 클래스 상위 분류 조회 -->
    <select id="selectActivityCateList" resultType="ActivityCate">
        SELECT a.* FROM activitycate a ORDER BY a.code ASC
    </select>

    <!-- 5. 클래스 하위 분류 조회 (by 상위 분류 코드) -->
    <select id="selectActDetailCateList" parameterType="int" resultType="ActDetailCate">
        SELECT a.* FROM actdetailcate a WHERE actcode = #{actcode} ORDER BY a.code ASC
    </select>

    <!-- 6. 클래스 이미지 등록 -->
    <insert id="insertClassImage" parameterType="ClassImage">
        INSERT INTO classimage(filename, filedata, filetype, filesize, typechk, classcode)
        VALUES(#{filename}, #{filedata}, #{filetype}, #{filesize}, #{typechk}, #{classcode})
    </insert>

    <!-- ****************** -->

    <!-- 1. 내 클래스 전체 조회 -->
    <select id="selectMyClassList" parameterType="string" resultType="ClassProduct">
        SELECT c.* FROM classproduct c WHERE memberid = #{id}
    </select>

    <!-- 2. 클래스 1개 조회 -->
    <select id="selectClassOne" parameterType="long" resultType="ClassProduct">
        SELECT c.* FROM classproduct c WHERE classcode = #{classcode}
    </select>

    <!-- 3. 클래스 삭제 (휴면 처리) -->
    <update id="updateClassInactive" parameterType="ClassProduct">
        
    </update>

    <!-- 4. 클래스 내용 수정 --> 
    <update id="updateClassOne" parameterType="ClassProduct">
        UPDATE classproduct SET title = #{title}, postcode = #{postcode}, address1 = #{address1}, address2 = #{address2}, address3 = #{address3}, 
            latitude = #{latitude}, longitude = #{longitude}, price = #{price}, nickname = #{nickname}, intro=#{intro}, instructor = #{instructor}, 
            curriculum = #{curriculum} WHERE classcode = #{classcode}
    </update>

    <!-- 5. 클래스 이미지 번호 리스트 조회 -->
    <select id="selectClassImageNoList" parameterType="long">
        SELECT i.no FROM classimage i WHERE i.classcode = #{classcode}
    </select>

    <!-- 6. 클래스 이미지 1개 불러오기 -->
    <select id="selectClassImageOne" parameterType="long" resultType="ClassImage">
        SELECT i.* FROM classimage i WHERE i.no = #{no}
    </select>

    <!-- 7. 클래스 이미지 수정 -->
    <update id="updateClassImage" parameterType="ClassImage">
        UPDATE classimage SET filename = #{filename}, filetype = #{filetype}, filesize = #{filesize}, filedata = #{filedata}, typechk = #{typechk} WHERE no = #{no}
    </update>

    <!-- 8. 클래스 이미지 삭제 -->
    <delete id="deleteClassImageOne" parameterType="long">
        DELETE FROM classimage WHERE no = #{no}
    </delete>


</mapper>