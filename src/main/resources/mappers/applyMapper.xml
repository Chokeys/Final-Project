<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.ApplyMapper">

<!-- 1. 클래스 일괄 신청 -->    
<insert id="insertApplyBatch" parameterType="list">
    INSERT INTO APPLY(no, person, payment, unitno, memberid)
    SELECT seq_apply_no.NEXTVAL, T1.* FROM(
        <foreach item="obj" collection="list" separator=" UNION ALL ">
            SELECT ${obj.person} person, ${obj.payment} payment, ${obj.unitno} unitno, '${obj.memberid}' memberid 
            FROM DUAL
        </foreach>
    ) T1
</insert>

<!-- 2. 클래스 신청 상태 기록 -->
<insert id="insertApplyStatusBatch" parameterType="list">
    INSERT INTO applystatus(no, applyno, chk)
    SELECT seq_applystatus_no.NEXTVAL, T1.* FROM(
        <foreach item="obj" collection="list" separator=" UNION ALL ">
            SELECT ${obj.applyno} applyno, ${obj.chk} chk FROM DUAL
        </foreach>
    ) T1
</insert>

<!-- 3. 클래스 신청 취소 -->
<update id="updateApplyCancel" parameterType="Apply">
    UPDATE APPLY SET chk = 2 WHERE no = #{no}
</update>

<!-- 4. 클래스 참여 완료 -->
<update id="updateApplyComplete" parameterType="list">
    UPDATE APPLY SET chk = 3 WHERE no In (
        <foreach item="obj" collection="list" separator=" , ">
            #{obj.no}
        </foreach>
    )
</update>

<!-- 5. 클래스 신청 성공 시, 인원수 변경 -->
<update id="updateClassUnitApplySuccess" parameterType="list">
    UPDATE classunit SET
        cnt = (CASE 
            <foreach item="obj" collection="list" separator=" ">
                WHEN no = #{obj.unitno} THEN cnt + #{obj.person}
            </foreach>
        END)
        WHERE no IN(
            <foreach item="obj" collection="list" separator=" ">
                #{obj.unitno}
            </foreach>
        )
</update>

<!-- 6. 클래스 신청 취소 시, 인원수 변경 -->
<update id="updateClassUnitApplyCancel" parameterType="Apply">
    UPDATE classunit SET cnt = cnt - #{person} WHERE no = #{unitno}
</update>

<!-- 7. 클래스 신청 상태(chk = 1)인 것만 조회 -->
<select id="selectApplyListById" parameterType="map" resultType="com.example.dto.ApplyView">
    SELECT a.* FROM(
        SELECT ROW_NUMBER() OVER(ORDER BY a.applyregdate DESC) AS rnum, 
        a.* FROM applyview a WHERE memberid = #{id}
        ) a WHERE a.rnum <![CDATA[ >= ]]> ${first} AND a.rnum <![CDATA[ <= ]]> ${last} ORDER BY a.unitno DESC
</select>

<!-- 8. 신청 전체 개수 조회 -->
<select id="countApplyList" parameterType="String" resultType="long">
    SELECT COUNT(*) FROM APPLY WHERE memberid = #{id}
</select>

<!--9. 클래스 신청 번호 조회 (등록한 개수만큼)-->
<select id="selectInsertedApplyNoList" parameterType="map" resultType="long">
    SELECT a.NO FROM (SELECT ROW_NUMBER() OVER(ORDER BY NO desc) rnum, * FROM apply a WHERE memberid = #{id} ORDER BY NO DESC) a WHERE rnum <![CDATA[ >= ]]> 1 AND rnum <![CDATA[ <= ]]> #{count};
</select>

<!-- 9. 클래스 신청 상태(chk = 1)인 것만 조회 -->
<select id="selectBasketListById" parameterType="map" resultType="BasketView">
    SELECT a.* FROM(
        SELECT ROW_NUMBER() OVER(ORDER BY a.no DESC) AS rnum, 
        a.* FROM basketview a WHERE memberid = #{id}
        ) a WHERE a.rnum <![CDATA[ >= ]]> ${first} AND a.rnum <![CDATA[ <= ]]> ${last} ORDER BY a.no DESC
</select>

<!-- 10. 클래스별 신청내역 조회(클래스 신청 상태(chk = 1,3)인 것만 조회) --> 
    <select id="selectApplyViewListByClasscode" parameterType="map" resultType="com.example.dto.ApplyView">
       SELECT a.classdate, a.classday, a.classstart, a.classend, a.totalprice, a.chk, a.person, a.payment, a.memberid, a.phone FROM applyview a WHERE a.chk IN(1,3)
    </select>

</mapper>